<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Map[
	<!ENTITY spatial_extents SYSTEM "constants/extent_spatial.cnf">
	<!ENTITY sql_extents SYSTEM "constants/extent_sql.cnf">
	<!ENTITY major_grid SYSTEM "constants/major_grid_idx.cnf">
	<!ENTITY minor_grid SYSTEM "constants/minor_grid_idx.cnf">

	<!ENTITY srid SYSTEM "constants/target_srid.cnf">
	<!ENTITY db_settings SYSTEM "constants/db.cnf">

	<!ENTITY query_main_highways "SELECT ST_AsBinary(E.edge_geom),* FROM edge E LEFT JOIN edge_access A ON E.edge_access_id = A.access_id LEFT JOIN edge_classes C ON E.edge_class_id = C.class_id">
	<!ENTITY query_order_highways " AND edge_tunnel = false ORDER BY edge_level ASC, edge_bridge ASC, class_draw_order ASC, edge_slip DESC">

	<!ENTITY query_main_highways_label "SELECT ST_AsBinary(E.edge_geom),* FROM edge E LEFT JOIN edge_access A ON E.edge_access_id = A.access_id LEFT JOIN edge_classes C ON E.edge_class_id = C.class_id">
	<!ENTITY query_order_highways_label " AND edge_slip = FALSE AND (edge_tunnel = false OR class_name='Pedestrian tunnel') ORDER BY edge_level DESC, edge_bridge DESC, class_draw_order DESC, edge_slip DESC">

	<!ENTITY text_places_font "Roboto Medium">
	<!ENTITY text_places_md_font "Roboto Regular">
	<!ENTITY text_places_lg_font "Roboto Regular">
	<!ENTITY text_places_char_spacing "1.0">
	<!ENTITY text_places_colour "rgb(0,0,0)">
	<!ENTITY text_places_min_padding "1.0">
	<!ENTITY text_places_halo_fill "rgba(255,255,255,1.0)">

	<!ENTITY text_highways_font "Exo Medium">
	<!ENTITY text_highways_char_spacing "1.0">
	<!ENTITY text_highways_min_padding "1.0">
	<!ENTITY text_highways_halo_fill "rgba(255,255,255,1.0)">
	<!ENTITY text_highways_min_path_length "400.0">
	<!ENTITY text_highways_min_bridge_length "100.0">

	<!ENTITY text_expanses_lg_font "Roboto Bold">
	<!ENTITY text_expanses_char_spacing "1.0">
	<!ENTITY text_expanses_colour "rgba(0,0,0,0.35)">
	<!ENTITY text_expanses_min_padding "1.0">
	<!ENTITY text_expanses_halo_fill "rgba(255,255,255,200)">
]>

<Map background-color="#ffffff" buffer-size="200" srs="+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs">

  <!-- #################################### -->
  <!-- ############## STYLES ############## -->
  <!-- #################################### -->

<Style name="Cartographic_Area_Outline">

 <Rule>
  <Filter>[class_name].match('(.*)Runway(.*)')</Filter>
  <LineSymbolizer stroke="#555555" stroke-width="3.0" stroke-dasharray="12.0,12.0" stroke-linejoin="miter" stroke-linecap="butt" />
 </Rule>

</Style>

<Style name="Cartographic_Area_Fill">

 <Rule>
  <Filter>[class_name].match('(.*)Runway(.*)')</Filter>
   <PolygonSymbolizer fill="#FFFFFF" />
 </Rule>

</Style>

<Style name="Area_Labels">

    <Rule>
      <!-- Small airports -->
      <Filter>[class_name].match('(.*)Airport(.*)') and [area_area] &lt; 3.0</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_md_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="2.0"
		placement="interior"      
		wrap-width="350.0"   
		label-position-tolerance="10"
		size="38.0"
      >[area_name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Big airports -->
      <Filter>[class_name].match('(.*)Airport(.*)') and [area_area] &gt;= 3.0 and [area_area] &lt; 8.0</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_md_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="2.0"
		placement="interior"      
		wrap-width="350.0"   
		label-position-tolerance="25"
		size="50.0"
      >[area_name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Huge airports -->
      <Filter>[class_name].match('(.*)Airport(.*)') and [area_area] &gt;= 8.0</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_md_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="2.0"
		placement="interior"      
		wrap-width="400.0"   
		label-position-tolerance="80"
		size="85.0"
      >[area_name]</TextSymbolizer>
    </Rule>

</Style>

<Style name="Road_Labels" filter-mode="first">

 <Rule>
      <!-- Bridges: Motorway -->
      <Filter>[edge_bridge]=1 and [class_name].match('(.*)Motorway(.*)')</Filter>
      <TextSymbolizer 
		character-spacing="&text_highways_char_spacing;"   
		minimum-padding="&text_highways_min_padding;"      
		face-name="&text_highways_font;"
		halo-fill="&text_highways_halo_fill;"   

		minimum-path-length="&text_highways_min_bridge_length;"
		dy="35"
		fill="#295d72"
		halo-radius="2.5"
		placement="line"         
		size="38.0"
		minimum-distance="1000.0"
      >[edge_name]</TextSymbolizer>
 </Rule>

 <Rule>
      <!-- Bridges: B road -->
      <Filter>[edge_bridge]=1 and [class_name].match('(.*)B road(.*)')</Filter>
      <TextSymbolizer 
		character-spacing="&text_highways_char_spacing;"   
		minimum-padding="&text_highways_min_padding;"      
		face-name="&text_highways_font;"
		halo-fill="&text_highways_halo_fill;"   

		minimum-path-length="&text_highways_min_bridge_length;"
		dy="28"
		fill="#794b0d"
		halo-radius="2.5"
		placement="line"         
		size="33.0"
		minimum-distance="1000.0"
      >[edge_name]</TextSymbolizer>
 </Rule>

 <Rule>
      <!-- Bridges: Primary roads and A roads -->
      <Filter>[edge_bridge]=1 and ( [class_name].match('(.*)Primary road(.*)') or [class_name].match('(.*)A road(.*)') )</Filter>
      <TextSymbolizer 
		character-spacing="&text_highways_char_spacing;"   
		minimum-padding="&text_highways_min_padding;"      
		face-name="&text_highways_font;"
		halo-fill="&text_highways_halo_fill;"   

		minimum-path-length="&text_highways_min_bridge_length;"
		dy="28"
		fill="#e91a1a"
		halo-radius="2.5"
		placement="line"         
		size="36.0"
		minimum-distance="1000.0"
      >[edge_name]</TextSymbolizer>
 </Rule>

 <Rule>
      <!-- Bridges: All other types of road -->
      <Filter>[edge_bridge]=1</Filter>
      <TextSymbolizer 
		character-spacing="&text_highways_char_spacing;"   
		minimum-padding="&text_highways_min_padding;"      
		face-name="&text_highways_font;"
		halo-fill="&text_highways_halo_fill;"   

		minimum-path-length="&text_highways_min_bridge_length;"
		dy="26"
		fill="rgba(0,0,0,1.00)"
		halo-radius="2.5"
		placement="line"         
		size="32.0"
		minimum-distance="1000.0"
      >[edge_name]</TextSymbolizer>
 </Rule>

 <Rule>
      <!-- Motorway -->
      <Filter>[class_name].match('(.*)Motorway(.*)') and [edge_bridge]=0</Filter>
      <TextSymbolizer 
		character-spacing="&text_highways_char_spacing;"   
		minimum-padding="&text_highways_min_padding;"      
		face-name="&text_highways_font;"
		halo-fill="&text_highways_halo_fill;"   
		minimum-path-length="&text_highways_min_path_length;"

		dy="33"
		fill="#295d72"
		halo-radius="2.5"
		placement="line"         
		size="35.0"
		minimum-distance="1000.0"
      >[edge_name]</TextSymbolizer>
 </Rule>

 <Rule>
      <!-- B road -->
      <Filter>[edge_bridge]=0 and [class_name].match('(.*)B road(.*)')</Filter>
      <TextSymbolizer 
		character-spacing="&text_highways_char_spacing;"   
		minimum-padding="&text_highways_min_padding;"      
		face-name="&text_highways_font;"
		halo-fill="&text_highways_halo_fill;"   
		minimum-path-length="&text_highways_min_path_length;"

		dy="30"
		fill="#794b0d"
		halo-radius="2.5"
		placement="line"         
		size="33.0"
		minimum-distance="1000.0"
      >[edge_name]</TextSymbolizer>
 </Rule>

 <Rule>
      <!-- Primary roads and A roads -->
      <Filter>[edge_bridge]=0 and ( [class_name].match('(.*)Primary road(.*)') or [class_name].match('(.*)A road(.*)') )</Filter>
      <TextSymbolizer 
		character-spacing="&text_highways_char_spacing;"   
		minimum-padding="&text_highways_min_padding;"      
		face-name="&text_highways_font;"
		halo-fill="&text_highways_halo_fill;"   
		minimum-path-length="&text_highways_min_path_length;"

		dy="33"
		fill="#e91a1a"
		halo-radius="2.5"
		placement="line"         
		size="35.0"
		minimum-distance="1000.0"
      >[edge_name]</TextSymbolizer>
 </Rule>

 <Rule>
      <!-- All other types of road -->
      <Filter>[edge_bridge]=0</Filter>
      <TextSymbolizer 
		character-spacing="&text_highways_char_spacing;"   
		minimum-padding="&text_highways_min_padding;"      
		face-name="&text_highways_font;"
		halo-fill="&text_highways_halo_fill;"   
		minimum-path-length="&text_highways_min_path_length;"

		dy="27"
		fill="rgba(0,0,0,1.00)"
		halo-radius="2.5"
		placement="line"         
		size="31.0"
		minimum-distance="1000.0"
      >[edge_name]</TextSymbolizer>
 </Rule>
</Style>

<Style name="Text_Expanses">

 <Rule>
      <!-- Very large places like Portsmouth, Poole, Southend -->
      <Filter>[fontheight]=13</Filter>
      <TextSymbolizer 
		character-spacing="&text_expanses_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_expanses_colour;"
		minimum-padding="&text_expanses_min_padding;"      
		face-name="&text_expanses_lg_font;"
		halo-fill="&text_expanses_halo_fill;"   

		halo-radius="0.0"
		placement="point"      
		wrap-width="400.0"   
		label-position-tolerance="400"
		size="130.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Very large places like various islands -->
      <Filter>[fontheight]=14</Filter>
      <TextSymbolizer 
		character-spacing="&text_expanses_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_expanses_colour;"
		minimum-padding="&text_expanses_min_padding;"      
		face-name="&text_expanses_lg_font;"
		halo-fill="&text_expanses_halo_fill;"   

		halo-radius="0.0"
		placement="point"      
		wrap-width="500.0"   
		label-position-tolerance="400"
		size="150.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Cities such as Newcastle upon Tyne -->
      <Filter>[fontheight]=15</Filter>
      <TextSymbolizer 
		character-spacing="&text_expanses_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_expanses_colour;"
		minimum-padding="&text_expanses_min_padding;"      
		face-name="&text_expanses_lg_font;"
		halo-fill="&text_expanses_halo_fill;"

		halo-radius="0.0"
		placement="point"      
		wrap-width="600.0"   
		label-position-tolerance="400"
		size="170.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Huge expanses, mostly in Scotland -->
      <Filter>[fontheight]=16</Filter>
      <TextSymbolizer 
		character-spacing="&text_expanses_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_expanses_colour;"
		minimum-padding="&text_expanses_min_padding;"      
		face-name="&text_expanses_lg_font;"
		halo-fill="&text_expanses_halo_fill;"   

		halo-radius="0.0"
		placement="point"      
		wrap-width="700.0"   
		label-position-tolerance="400"
		size="190.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Islands mostly -->
      <Filter>[fontheight]=17</Filter>
      <TextSymbolizer 
		character-spacing="&text_expanses_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_expanses_colour;"
		minimum-padding="&text_expanses_min_padding;"      
		face-name="&text_expanses_lg_font;"
		halo-fill="&text_expanses_halo_fill;"   

		halo-radius="0.0"
		placement="point"      
		wrap-width="700.0"   
		label-position-tolerance="250"
		size="140.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Islands mostly -->
      <Filter>[fontheight]&gt;17</Filter>
      <TextSymbolizer 
		character-spacing="&text_expanses_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_expanses_colour;"
		minimum-padding="&text_expanses_min_padding;"      
		face-name="&text_expanses_lg_font;"
		halo-fill="&text_expanses_halo_fill;"   

		halo-radius="0.0"
		placement="point"      
		wrap-width="700.0"   
		label-position-tolerance="300"
		size="155.0"
      >[name]</TextSymbolizer>
    </Rule>

  </Style>

  <Style name="Text_Places">
    <Rule>
      <!-- Small named places, like farms -->
      <Filter>[fontheight]=5</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="2.0"
		placement="point"      
		wrap-width="100.0"   
		label-position-tolerance="10"
		size="36.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Areas of settlements, e.g. Byker -->
      <Filter>[fontheight]=6</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_md_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="3.0"
		placement="point"      
		wrap-width="140.0"   
		label-position-tolerance="10"
		size="45.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Villages -->
      <Filter>[fontheight]=7</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_md_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="3.0"
		placement="point"      
		wrap-width="180.0"   
		label-position-tolerance="25"
		size="54.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Extents and areas, e.g. hills, nature reserves -->
      <Filter>[fontheight]=8</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_md_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="3.0"
		placement="point"      
		wrap-width="240.0"   
		label-position-tolerance="35"
		size="59.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Notable places -->
      <Filter>[fontheight]=9</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_lg_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="3.0"
		placement="point"      
		wrap-width="300.0"   
		label-position-tolerance="50"
		size="67.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Larger areas, such as estuaries, Scottish wilderness, etc. -->
      <Filter>[fontheight]=10</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_lg_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="2.5"
		placement="point"      
		wrap-width="400.0"   
		label-position-tolerance="80"
		size="70.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Big hills etc, e.g. The Cheviot. Large places such as Carlisle. -->
      <Filter>[fontheight]=11</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_lg_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="2.5"
		placement="point"      
		wrap-width="400.0"   
		label-position-tolerance="125"
		size="75.0"
      >[name]</TextSymbolizer>
    </Rule>

    <Rule>
      <!-- Great big rivers, bays, etc. -->
      <Filter>[fontheight]=12</Filter>
      <TextSymbolizer 
		character-spacing="&text_places_char_spacing;"   
		orientation="[orientatio]"
		fill="&text_places_colour;"
		minimum-padding="&text_places_min_padding;"      
		face-name="&text_places_lg_font;"
		halo-fill="&text_places_halo_fill;"   

		halo-radius="3.0"
		placement="point"      
		wrap-width="400.0"   
		label-position-tolerance="150"
		size="90.0"
      >[name]</TextSymbolizer>
    </Rule>

  </Style>

  <Style name="Grid_Lines">
    <Rule>
      <LineSymbolizer stroke="#2682F4" stroke-opacity="0.4" stroke-width="3.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
  </Style>

  <Style name="Grid_Label_E">
    <Rule>
	  <TextSymbolizer 
		fill="#2682F4"
		character-spacing="9.0"
		spacing="0"   
		label-position-tolerance="0"   
		avoid-edges="false"   
		allow-overlap="true"   
		placement="point"  
		opacity="0.65"   
		text-transform="uppercase"
		minimum-padding="0.0"   
		minimum-path-length="1.0"      
		clip="false" 
		face-name="Open Sans Bold"  
		comp-op="multiply"
		size="50">[grid_id_text]</TextSymbolizer>
    </Rule>
  </Style>

  <Style name="Grid_Label_N">
    <Rule>
	  <TextSymbolizer 
		fill="#2682F4"
		character-spacing="9.0"
		spacing="0"   
		label-position-tolerance="0"   
		avoid-edges="false"   
		allow-overlap="true"   
		placement="point"  
		opacity="0.65"   
		text-transform="uppercase"
		minimum-padding="0.0"   
		minimum-path-length="1.0"      
		clip="false" 
		face-name="Open Sans Bold"  
		orientation="270" 
		comp-op="multiply"
		size="50">[grid_id_text]</TextSymbolizer>
    </Rule>
  </Style>

  <Style name="Hillshade">
    <Rule>
      <RasterSymbolizer opacity="0.8" scaling="bilinear" comp-op="multiply" />
    </Rule>
  </Style>

  <Style name="Zonal_CRoW_Access">
    <Rule>
      <PolygonSymbolizer fill="rgba(255, 240, 245, 150)" comp-op="multiply" />
      <LineSymbolizer stroke="rgb(255, 75, 130)" stroke-opacity="0.2" offset="-10.0" stroke-width="20.0" stroke-linejoin="miter" stroke-linecap="butt" />
    </Rule>
  </Style>

  <Style name="Zonal_CRoW_Access_Line">
    <Rule>
      <!--<LinePatternSymbolizer file="icons/crow_grad.png" />-->
    </Rule>
  </Style>

  <Style name="Surface_Detail">
    <Rule>
      <PolygonSymbolizer fill="#909090" />
    </Rule>
  </Style>

  <Style name="Foreshore">
    <Rule>
      <PolygonSymbolizer fill="#EECBAD" />
    </Rule>
  </Style>

  <Style name="Water_Area">
    <Rule>
      <PolygonSymbolizer fill="#B1F4FF" />
      <LineSymbolizer stroke="#16C1FF" offset="-1.0" stroke-width="2.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
  </Style>

  <Style name="Water_Area_Tidal">
    <Rule>
      <PolygonSymbolizer fill="#B1F4FF" fill-opacity="0.3" />
    </Rule>
  </Style>

  <Style name="Water_Line">
    <Rule>
      <LineSymbolizer stroke="#16C1FF" stroke-width="2.0" />
    </Rule>
  </Style>

  <Style name="Elevation_Contour_Lines">
    <Rule>
      <LineSymbolizer stroke="#CD6839" stroke-width="1.5" />
    </Rule>
  </Style>

  <Style name="Elevation_Contour_Labels">
    <Rule>
      <TextSymbolizer 
		fill="#CD6839"
		character-spacing="1.0"
		spacing="0"   
		label-position-tolerance="0"   
		avoid-edges="false"   
		placement="line"  
		opacity="1.00"   
		halo-fill="rgba(255,255,255,1.0)"   
		halo-radius="4.0"
		minimum-padding="0.0"   
		minimum-path-length="30.0"      
		clip="false" 
		upright="right"
		face-name="Open Sans Regular"  
		size="20.0">[contour]</TextSymbolizer>
    </Rule>
  </Style>

  <Style name="Forest_Area">
    <Rule>
      <PolygonSymbolizer fill="#BCED91" />
    </Rule>
  </Style>

  <Style name="Building_Fill">
    <Rule>
      <PolygonSymbolizer fill="#d4cbbd" />
      <LineSymbolizer stroke="#202020" stroke-width="0.75" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
  </Style>

  <Style name="Building_Border">
    <Rule>
      <!--<LineSymbolizer stroke="#808080" offset="+1.0" stroke-width="1.0" stroke-linejoin="round" stroke-linecap="butt" />-->
    </Rule>
  </Style>

  <Style name="Road_Test_Inner">
    <Rule>
      <Filter>[class_name].match('(.*)Railway(.*)') or [class_name].match('(.*)Light rail(.*)')</Filter>
      <LineSymbolizer stroke="#FFFFFF" stroke-width="8.0" stroke-linejoin="round" stroke-linecap="butt" />
      <LineSymbolizer stroke="#FFFFFF" stroke-width="2.0" offset="1.0" stroke-linejoin="round" stroke-linecap="round" />
      <LineSymbolizer stroke="#FFFFFF" stroke-width="2.0" offset="3.0" stroke-linejoin="round" stroke-linecap="round" />
      <LineSymbolizer stroke="#FFFFFF" stroke-width="2.0" offset="-1.0" stroke-linejoin="round" stroke-linecap="round" />
      <LineSymbolizer stroke="#FFFFFF" stroke-width="2.0" offset="-3.0" stroke-linejoin="round" stroke-linecap="round" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Motorway(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#459CBE" stroke-width="9.0" stroke-linejoin="round" stroke-linecap="round" />
      <LineSymbolizer stroke="#000000" offset="5.0" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
      <LineSymbolizer stroke="#000000" offset="-5.0" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Motorway(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#459CBE" stroke-width="11.0" stroke-linejoin="round" stroke-linecap="round" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Primary road(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#F06060" stroke-width="7.0" stroke-linejoin="round" stroke-linecap="round" />
      <LineSymbolizer stroke="#000000" offset="4.0" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
      <LineSymbolizer stroke="#000000" offset="-4.0" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Primary road(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#F06060" stroke-width="9.0" stroke-linejoin="round" stroke-linecap="round" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)A road(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#F06060" stroke-width="7.0" stroke-linejoin="round" stroke-linecap="round" />
      <LineSymbolizer stroke="#000000" offset="4.0" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
      <LineSymbolizer stroke="#000000" offset="-4.0" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)A road(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#F06060" stroke-width="9.0" stroke-linejoin="round" stroke-linecap="round" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)B road(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#F3B562" stroke-width="6.0" stroke-linejoin="round" stroke-linecap="round" />
      <LineSymbolizer stroke="#000000" offset="3.5" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
      <LineSymbolizer stroke="#000000" offset="-3.5" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)B road(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#F3B562" stroke-width="8.0" stroke-linejoin="round" stroke-linecap="round" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Minor road(.*)')</Filter>
      <LineSymbolizer stroke="#F2E86F" stroke-width="8.0" stroke-linejoin="round" stroke-linecap="square" />
      <LineSymbolizer stroke="#000000" offset="4.5" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
      <LineSymbolizer stroke="#000000" offset="-4.5" stroke-dasharray="10.0,10.0" stroke-width="1.0" stroke-linejoin="miter" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Local street(.*)')</Filter>
      <LineSymbolizer stroke="#FFFFFF" stroke-width="8.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Access road(.*)') or [class_name].match('(.*)Lay-by(.*)')</Filter>
      <LineSymbolizer stroke="#FFFFFF" stroke-width="5.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Track(.*)') or [access_name].match('(.*)Pedestrianised(.*)')</Filter>
      <LineSymbolizer stroke="#FFFFFF" stroke-width="5.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Path(.*)') and [edge_bridge] = 1</Filter>
      <LineSymbolizer stroke="#FFFFFF" stroke-width="5.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Path(.*)') and [edge_bridge] = 0</Filter>
      <LineSymbolizer stroke="#FFFFFF" stroke-width="3.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Unknown(.*)')</Filter>
      <LineSymbolizer stroke="#FFCCCC" stroke-width="5.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>

    <!-- These are access lines, but we want them beneath roads -->
    <Rule>
      <Filter>[access_name].match('(.*)Footpath(.*)') or [access_name].match('(.*)footpath(.*)')</Filter>
      <LineSymbolizer stroke="#FF0000" stroke-width="2.5" stroke-dasharray="8.0,8.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Steps(.*)')</Filter>
      <LineSymbolizer stroke="#FF0000" stroke-width="2.5" stroke-dasharray="4.0,4.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[access_name].match('(.*)Bridleway(.*)')</Filter>
      <LineSymbolizer stroke="#FF0000" stroke-width="2.5" stroke-dasharray="16.0,16.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>

  </Style>

  <Style name="Road_Test_Casing">

    <Rule>
      <Filter>[edge_bridge] = 1 and ( [class_name].match('(.*)Railway(.*)') or [class_name].match('(.*)Light rail(.*)') )</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="11.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Motorway(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="11.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Motorway(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="13.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Primary road(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="9.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Primary road(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="11.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)A road(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="9.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)A road(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="11.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)B road(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="8.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)B road(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="10.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule> <!-- Don't want bridges etc showing as dead ends -->
      <Filter>not ([edge_level] = 0) and [class_name].match('(.*)Minor road(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="10.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>not ([edge_level] = 0) and [class_name].match('(.*)Local street(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="10.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_level] = 0 and [class_name].match('(.*)Minor road(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="10.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[edge_level] = 0 and [class_name].match('(.*)Local street(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="10.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Access road(.*)') or [class_name].match('(.*)Lay-by(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="7.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>( [class_name].match('(.*)Track(.*)') or [access_name].match('(.*)Pedestrianised(.*)') ) and [edge_bridge] = 0</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="7.0" stroke-dasharray="6.0,6.0" stroke-linejoin="miter" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Path(.*)') and [edge_bridge] = 0</Filter>
      <LineSymbolizer stroke="#FFFFFF" stroke-width="4.0" stroke-linejoin="miter" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Unknown(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="7.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>

    <!-- Thicker outline for bridges -->
    <Rule>
      <Filter>[edge_bridge] &gt; -1 and ( [class_name].match('(.*)Railway(.*)') or [class_name].match('(.*)Light rail(.*)') )</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="14.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)Motorway(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="14.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)Motorway(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="16.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)Primary road(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="12.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)Primary road(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="14.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)A road(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="12.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)A road(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="14.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)B road(.*)') and [edge_oneway] = 1</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="11.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)B road(.*)') and [edge_oneway] = 0</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="13.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)Minor road(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="13.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)Local street(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="13.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)Track(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="11.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>
    <Rule>
      <Filter>[edge_bridge] = 1 and [class_name].match('(.*)Path(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="10.0" stroke-linejoin="round" stroke-linecap="butt" />
    </Rule>

  </Style>

  <Style name="Road_Access_Rights">
    <Rule>
      <Filter>[class_name].match('(.*)Railway(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Light rail(.*)')</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>( [access_name].match('(.*)Footpath(.*)') or [access_name].match('(.*)footpath(.*)') ) and [edge_bridge] = 1</Filter>
      <LineSymbolizer stroke="#FF0000" stroke-width="2.0" stroke-dasharray="8.0,8.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[access_name].match('(.*)Bridleway(.*)') and ( [edge_bridge] = 1 or [class_name].match('(.*)Track(.*)') )</Filter>
      <LineSymbolizer stroke="#FF0000" stroke-width="2.0" stroke-dasharray="16.0,16.0" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
    <Rule>
      <Filter>[class_name].match('(.*)Pedestrian tunnel(.*)')</Filter>
      <LineSymbolizer stroke="#FF0000" stroke-width="2.0" stroke-dasharray="8.0,8.0" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="square" />
    </Rule>
  </Style>

  <Style name="Road_Finishes">
    <!-- Nothing yet -->
  </Style>

  <!-- #################################### -->
  <!-- ############## LAYERS ############## -->
  <!-- #################################### -->

  <!--<Layer name="Forest_Area">
    <StyleName>Forest_Area</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">_import_vmd_woodland</Parameter>
    </Datasource>
  </Layer>

  <Layer name="Elevation_Contour_Lines">
    <StyleName>Elevation_Contour_Lines</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">raw_oscpo_contours</Parameter>
    </Datasource>
  </Layer>

  <Layer name="Elevation_Contour_Labels">
    <StyleName>Elevation_Contour_Labels</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">raw_oscpo_contours</Parameter>
    </Datasource>
  </Layer>

  <Layer name="Water_Surface_Line">
    <StyleName>Water_Line</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">_import_vmd_water_lines</Parameter>
    </Datasource>
  </Layer>

  <Layer name="Water_Area">
    <StyleName>Water_Area</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT geom FROM _import_vmd_water ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <Layer name="Foreshore">
    <StyleName>Foreshore</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">_import_vmd_foreshore</Parameter>
    </Datasource>
  </Layer>

  <Layer name="Water_Area_Tidal">
    <StyleName>Water_Area_Tidal</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT geom FROM _import_vmd_water ) AS SQ</Parameter>
    </Datasource>
  </Layer>-->

  <!-- Insert special layer here for high/low tide contours -->

  <!--<Layer name="Surface_Detail">
    <StyleName>Surface_Detail</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">_import_vmd_ornament</Parameter>
    </Datasource>
  </Layer>

  <Layer name="Zonal_CRoW_Access_1">
    <StyleName>Zonal_CRoW_Access</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">_import_crow</Parameter>
    </Datasource>
  </Layer>-->

  <!-- Cartographic areas -->
  <!--<Layer name="Carto_Area_Outline">
    <StyleName>Cartographic_Area_Outline</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM cartographic_area a LEFT JOIN feature_classes f ON a.area_class_id = f.class_id ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Carto_Area_Fill">
    <StyleName>Cartographic_Area_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM cartographic_area a LEFT JOIN feature_classes f ON a.area_class_id = f.class_id ) AS SQ</Parameter>
    </Datasource>
  </Layer>-->

  <!-- Roads and paths at level -5 -->
  <Layer name="Building_Border_L-5">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer &lt;= -5 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L-5">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer &lt;= -5 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  
  <Layer name="Road_Test_Casing_L-5">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level &lt;= -5 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L-5">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level &lt;= -5 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L-5">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level &lt;= -5 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level -4 -->
  <Layer name="Building_Border_L-4">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = -4 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L-4">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = -4 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L-4">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -4 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L-4">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -4 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L-4">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -4 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level -3 -->
  <Layer name="Building_Border_L-3">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = -3 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L-3">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = -3 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L-3">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -3 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L-3">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -3 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L-3">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -3 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level -2 -->
  <Layer name="Building_Border_L-2">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = -2 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L-2">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = -2 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L-2">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -2 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L-2">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -2 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L-2">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -2 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level -1 -->
  <Layer name="Building_Border_L-1">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = -1 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L-1">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = -1 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L-1">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -1 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L-1">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -1 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L-1">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = -1 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level 0 -->
  <Layer name="Building_Border_L0">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND ( building_layer = 0 OR building_layer IS NULL ) ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L0">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND ( building_layer = 0 OR building_layer IS NULL ) ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L0">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND ( edge_level = 0 OR edge_level IS NULL ) &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L0">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND ( edge_level = 0 OR edge_level IS NULL ) &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L0">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND ( edge_level = 0 OR edge_level IS NULL ) &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level +1 -->
  <Layer name="Building_Border_L+1">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = 1 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L+1">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = 1 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L+1">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 1 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L+1">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 1 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L+1">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 1 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level +2 -->
  <Layer name="Building_Border_L+2">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = 2 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L+2">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = 2 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L+2">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 2 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L+2">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 2 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L+2">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 2 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level +3 -->
  <Layer name="Building_Border_L+3">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = 3 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L+3">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = 3 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L+3">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 3 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L+3">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 3 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L+3">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 3 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level +4 -->
  <Layer name="Building_Border_L+4">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = 4 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L+4">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer = 4 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L+4">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 4 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L+4">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 4 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L+4">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level = 4 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!-- Roads and paths at level +5 -->
  <Layer name="Building_Border_L+5">
    <StyleName>Building_Border</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer &gt;= 5 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Building_Fill_L+5">
    <StyleName>Building_Fill</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( SELECT * FROM buildings WHERE ST_Intersects(building_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND building_layer &gt;= 5 ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Casing_L+5">
    <StyleName>Road_Test_Casing</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level &gt;= 5 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Inner_L+5">
    <StyleName>Road_Test_Inner</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level &gt;= 5 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>
  <Layer name="Road_Test_Access_L+5">
    <StyleName>Road_Access_Rights</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_level &gt;= 5 &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

 <!--<Layer name="Hillshade">
    <StyleName>Hillshade</StyleName>
    <Datasource>
      <Parameter name="type">raster</Parameter>
      <Parameter name="file">relief/Relief.tif</Parameter>
      <Parameter name="extent">&spatial_extents;</Parameter>
    </Datasource>
  </Layer>-->

  <!-- Roads and paths finishing touches (on top of all else) -->
  <Layer name="Road_Finishes">
    <StyleName>Road_Finishes</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) &query_order_highways; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <Layer name="Grid_Lines">
    <StyleName>Grid_Lines</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="geometry_field">grid_box</Parameter>
      <Parameter name="table">( SELECT  ( ( ST_XMin( tile_geom )::integer % 100000 ) / 10000 )::text || ( subgrid_east / 1000 ) AS grid_id_east,
					( ( ST_YMin( tile_geom )::integer % 100000 ) / 10000 )::text || ( subgrid_north / 1000 ) AS grid_id_north,
					ST_SetSRID( 
						ST_MakeBox2D(
							ST_Point( ST_XMin( tile_geom ) + subgrid_east       , ST_YMin( tile_geom ) + subgrid_north ),
							ST_Point( ST_XMin( tile_geom ) + subgrid_east + 1000, ST_YMin( tile_geom ) + subgrid_north + 1000 )
						),
					&srid; ) AS grid_box
				FROM grid
				LEFT JOIN generate_series(0,9000,1000) AS subgrid_east ON true 
				LEFT JOIN generate_series(0,9000,1000) AS subgrid_north ON true
				WHERE tile_name = '&minor_grid;' ) AS SQ
      </Parameter>
    </Datasource>
  </Layer>

  <Layer name="Grid_Label_E">
    <StyleName>Grid_Label_E</StyleName>
    <Datasource>
      &db_settings;
      <!--<Parameter name="extent">&spatial_extents;</Parameter>-->
      <Parameter name="geometry_field">grid_text_point</Parameter>
      <Parameter name="table">( SELECT  ( ( ( ST_XMin( tile_geom )::integer + subgrid_step ) % 100000 ) / 10000 )::text || ( ( subgrid_step / 1000 ) % 10 ) AS grid_id_text,
					ST_SetSRID( 
						ST_MakePoint( ST_XMin( tile_geom ) + subgrid_step, ST_YMin( tile_geom ) + 3300 ),
					&srid; ) AS grid_text_point
				FROM grid
				LEFT JOIN generate_series(0,10000,1000) AS subgrid_step ON true 
				WHERE tile_name = '&minor_grid;' ) AS SQ
      </Parameter>
    </Datasource>
  </Layer>

  <Layer name="Grid_Label_N">
    <StyleName>Grid_Label_N</StyleName>
    <Datasource>
      &db_settings;
      <!--<Parameter name="extent">&spatial_extents;</Parameter>-->
      <Parameter name="geometry_field">grid_text_point</Parameter>
      <Parameter name="table">( SELECT  ( ( ( ST_YMin( tile_geom )::integer + subgrid_step ) % 100000 ) / 10000 )::text || ( ( subgrid_step / 1000 ) % 10 ) AS grid_id_text,
					ST_SetSRID( 
						ST_MakePoint( ST_XMin( tile_geom ) + 3300, ST_YMin( tile_geom ) +  + subgrid_step ),
					&srid; ) AS grid_text_point
				FROM grid
				LEFT JOIN generate_series(0,10000,1000) AS subgrid_step ON true 
				WHERE tile_name = '&minor_grid;' ) AS SQ
      </Parameter>
    </Datasource>
  </Layer>
  
  <!--<Layer name="Text_Areas">
    <StyleName>Area_Labels</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="geometry_field">area_geom</Parameter>
      <Parameter name="table">( 
		SELECT
			a.area_geom,
			ST_Area(a.area_geom) / 1000000.0 AS area_area,
			c.class_name,
			CASE WHEN a.area_name IS NULL THEN c.class_name
			     ELSE a.area_name
			END as area_name
		FROM
			area a
		LEFT JOIN
			feature_classes c
		ON
			a.area_class_id = c.class_id
		WHERE
			ST_Intersects(area_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;))
	) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <Layer name="Text_Places">
    <StyleName>Text_Places</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="geometry_field">geom</Parameter>
      <Parameter name="table">( 
		SELECT
			*,
			'black' AS color
		FROM
			_import_vmd_named_place
		WHERE
			ST_Intersects(geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;))
		AND
			fontcolour=1
		AND
			fontheight&lt;13 
		ORDER BY
			fontheight DESC
	) AS SQ</Parameter>
    </Datasource>
  </Layer>-->

  <Layer name="Road_Labels">
    <StyleName>Road_Labels</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="table">( &query_main_highways_label; WHERE ST_Intersects(edge_geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;) ) AND edge_name IS NOT NULL AND class_label = true &query_order_highways_label; ) AS SQ</Parameter>
    </Datasource>
  </Layer>

  <!--<Layer name="Text_Expanses" clear-label-cache="on">
    <StyleName>Text_Expanses</StyleName>
    <Datasource>
      &db_settings;
      <Parameter name="extent">&spatial_extents;</Parameter>
      <Parameter name="geometry_field">geom</Parameter>
      <Parameter name="table">( 
		SELECT
			*,
			'black' AS color
		FROM
			_import_vmd_named_place
		WHERE
			ST_Intersects(geom, ST_SetSRID('BOX(&sql_extents;)'::box2d, &srid;))
		AND
			fontcolour=1
		AND
			fontheight&gt;=13
		ORDER BY
			fontheight DESC
	) AS SQ</Parameter>
    </Datasource>
  </Layer>-->

</Map>

